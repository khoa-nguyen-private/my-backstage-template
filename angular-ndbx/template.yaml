apiVersion: backstage.io/v1beta2
kind: Template
metadata:
  name: angular-ndbx-template
  title: Angular NDBX App
  description: Creates a new Angular Project with NDBX included and set up.
  tags:
    - recommended
    - angular
    - ndbx
spec:
  owner: it-dev-ops.backstage@allianz.com
  type: service
  path: '.'

  parameters:
    - title: Please fill in the following information
      required:
        - name
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          ui:options:
            rows: 5
        description:
          title: Description
          type: string
          description: Help others understand what this app is for
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
        type:
          title: Project target
          type: string
          description: Type 'b2b' or 'b2c' to choose the use case of the app
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.developer.allianz.io

  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./files
        values:
          name: '{{ parameters.name }}'
          description: '{{ parameters.description }}'
          destination: '{{ parseRepoUrl parameters.repoUrl }}'
          owner: '{{ parameters.owner }}'

    - id: create-app
      name: Create App
      action: allianz:create-ndbx
      input:
        name: '{{ parameters.name }}'
        projectType: '{{ parameters.type }}'
    # - id: copy-local
    #   name: copy for local testing
    #   action: publish:file
    #   input:
    #     path: '../../local-publish'
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.developer.allianz.io']
        description: 'This is {{ parameters.name }}'
        repoUrl: '{{ parameters.repoUrl }}'
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: '{{ steps.publish.output.repoContentsUrl }}'
        catalogInfoPath: '/catalog-info.yaml'

  output:
    remoteUrl: '{{ steps.publish.output.remoteUrl }}'
    entityRef: '{{ steps.register.output.entityRef }}'

  # schema:
  #   required:
  #     - component_id
  #   properties:
  #     component_id:
  #       title: Name
  #       type: string
  #       description: Unique name of the component
  #     description:
  #       title: Description
  #       type: string
  #       description: Help others understand what this service does.
  #     http_port:
  #       title: Port
  #       type: integer
  #       default: 8080
  #       description: The port to run the gRPC service on
